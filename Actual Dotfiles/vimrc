set nocompatible              " be iMproved, required
filetype plugin indent on


" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" " alternatively, pass a path where Vundle should install plugins
" "call vundle#begin('~/some/path/here')

" " let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" " The following are examples of different formats supported.
" " Keep Plugin commands between vundle#begin/end.
" " plugin on GitHub repo
" Plugin 'tpope/vim-fugitive'
" " plugin from http://vim-scripts.org/vim/scripts.html
" " Plugin 'L9'
" " Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" " git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" " The sparkup vim script is in a subdirectory of this repo called vim.
" " Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" " Install L9 and avoid a Naming conflict if you've already installed a
" " different version somewhere else.
" " Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'Raimondi/delimitMate'
let g:gruvbox_transparent_bg = 1
Plugin 'morhetz/gruvbox'
colorscheme gruvbox

let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols_branch = ''
let g:airline_symbols_readonly = ''
let g:airline_symbols_linenr = ''

" " All of your Plugins must be added before the following line
" call vundle#end()            " required
" filetype plugin indent on    " required
" " To ignore plugin indent changes, instead use:
" "filetype plugin on

" " Brief help
" " :PluginList       - lists configured plugins
" " :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" " :PluginSearch foo - searches for foo; append `!` to refresh local cache
" " :PluginClean      - confirms removal of unused plugins; append `!` to
" auto-approve removal

" " see :h vundle for more details or wiki for FAQ
" " Put your non-Plugin stuff after this line

call vundle#end()

" smart-indent blank line after inserting an opening brace
function! IndentAfterOpeningBrace()
  " the blank line is the current line; the opening-brace line is the previous non-blank
  let lnum_open = prevnonblank(line('.') - 1)
  if lnum_open <= 0
    let base = 0
  else
    let base = indent(lnum_open)
  endif
  let target = base + &shiftwidth

  " build indent string respecting 'expandtab' and 'tabstop'
  if &expandtab
    let s = repeat(' ', target)
  else
    let ts = &tabstop
    let tabs = target / ts
    let spaces = target % ts
    let s = repeat("\t", tabs) . repeat(' ', spaces)
  endif

  " replace the blank line with indentation and put cursor after it
  call setline(line('.'), s)
  call cursor(line('.'), len(s) + 1)
endfunction

" filetypes you care about — add/remove filetypes as needed
autocmd FileType c,cpp,java,json,javascript,typescript inoremap <buffer> { {<CR><CR>}<Up><C-o>:call IndentAfterOpeningBrace()<CR>

set bg=dark
"set t_Co=64
"hi Normal guibg=NONE ctermbg=NONE

syntax on

set encoding=utf-8
set mouse=a
set splitbelow splitright
set autoindent
set smartindent
set noexpandtab
set tabstop=4
set softtabstop=0
set shiftwidth=4
set lazyredraw
set wildmenu
set wildmode=longest,list,full
set ignorecase
set smartcase
set showmatch
set showcmd
set ruler
set number
set showcmd
set foldenable
set foldmethod=marker

